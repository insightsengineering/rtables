% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tt_export.R
\name{as_dataframe_with_spec}
\alias{as_dataframe_with_spec}
\title{Generate a Flattened Data Frame}
\usage{
as_dataframe_with_spec(tt, spec = "v0_experimental", ...)
}
\arguments{
\item{tt}{VTableTree. The table.}

\item{spec}{character(1). The specification to use to
extract the flattened data frame. See details}

\item{...}{Passed to spec-specific flattened data frame conversion function.}
}
\description{
Generate a Flattened Data Frame
}
\details{
Flattened data frame specifications may differ in the exact information they include and
the form in which they represent it. Specifications whose names end in "_experimental"
are subject to change without notice, but specifications without the "_experimental"
suffix will remain available \emph{including any bugs in their construction} indefinitely.
}
\note{
This function may eventually be migrated to a separate package, and so should
not be called via \code{::}
}
\examples{
lyt <- basic_table() \%>\%
    split_cols_by("ARM") \%>\%
    split_rows_by("STRATA1") \%>\%
    add_colcounts() \%>\% 
    analyze(head(c("AGE", "BMRKR2"), -1), afun = function(x) {
        list(
            "mean / sd" = rcell(c(mean(x), sd(x)), format = "xx.xx (xx.xx)"),
            "range" = rcell(diff(range(x)), format = "xx.xx")
        )
    })

tbl <- build_table(lyt, ex_adsl)
flattened_df <- as_dataframe_with_spec(tbl)

# You may need to split cell values that have 2 values
# You can utilize `tidyr::unnest_longer` to peform this function
split_cell_values_df <- flattened_df \%>\% tidyr::unnest_longer(c("A: Drug X", "B: Placebo", "C: Combination"))
}
