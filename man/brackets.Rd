% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tt_pos_and_access.R
\docType{import}
\name{[<-,VTableTree,ANY,ANY,list-method}
\alias{[<-,VTableTree,ANY,ANY,list-method}
\alias{[,VTableTree,logical,logical,ANY-method}
\alias{[,VTableTree,logical,ANY,ANY-method}
\alias{[,VTableTree,logical,missing,ANY-method}
\alias{[,VTableTree,ANY,logical,ANY-method}
\alias{[,VTableTree,ANY,missing,ANY-method}
\alias{[,VTableTree,ANY,character,ANY-method}
\alias{[,VTableTree,character,ANY,ANY-method}
\alias{[<-,VTableTree,ANY,ANY,CellValue-method}
\alias{[,VTableTree,logical,logical-method}
\alias{[,VTableTree,logical,ANY-method}
\alias{[,VTableTree,logical,missing-method}
\alias{[,VTableTree,ANY,logical-method}
\alias{[,VTableTree,ANY,missing-method}
\alias{[,VTableTree,missing,ANY-method}
\alias{[,VTableTree,ANY,character-method}
\alias{[,VTableTree,character,ANY-method}
\alias{[,VTableTree,character,character-method}
\alias{[,VTableTree,missing,numeric-method}
\alias{[,VTableTree,numeric,numeric-method}
\alias{bracket_subsetting}
\alias{[}
\alias{reexports}
\alias{[<-}
\title{Retrieve and assign elements of a \code{TableTree}}
\usage{
\S4method{[}{VTableTree,ANY,ANY,list}(x, i, j, ...) <- value

\S4method{[}{VTableTree,ANY,ANY,CellValue}(x, i, j, ...) <- value

\S4method{[}{VTableTree,logical,logical}(x, i, j, ..., drop = FALSE)

\S4method{[}{VTableTree,logical,ANY}(x, i, j, ..., drop = FALSE)

\S4method{[}{VTableTree,logical,missing}(x, i, j, ..., drop = FALSE)

\S4method{[}{VTableTree,ANY,logical}(x, i, j, ..., drop = FALSE)

\S4method{[}{VTableTree,ANY,missing}(x, i, j, ..., drop = FALSE)

\S4method{[}{VTableTree,missing,ANY}(x, i, j, ..., drop = FALSE)

\S4method{[}{VTableTree,ANY,character}(x, i, j, ..., drop = FALSE)

\S4method{[}{VTableTree,character,ANY}(x, i, j, ..., drop = FALSE)

\S4method{[}{VTableTree,character,character}(x, i, j, ..., drop = FALSE)

\S4method{[}{VTableTree,missing,numeric}(x, i, j, ..., drop = FALSE)

\S4method{[}{VTableTree,numeric,numeric}(x, i, j, ..., drop = FALSE)

x[i, j, ...]

x[i, j, ...] <- value
}
\arguments{
\item{x}{TableTree}

\item{i}{index}

\item{j}{index}

\item{\dots}{Includes
\describe{
\item{\emph{keep_topleft}}{logical(1) (\code{[} only) Should the \code{topleft}
material for the table be retained after subsetting. Defaults to \code{FALSE},
which retains the material if all rows are included (i.e. subsetting was by
column), and drops it otherwise.}
\item{\emph{keep_titles}}{logical(1) Should title information be retained. Defaults to \code{FALSE}}
\item{\emph{keep_fnotes}}{logical(1) Should non-referential footer
information be retained. Defaults to \code{keep_titles} (which defaults to \code{TRUE})}
\item{\emph{reindex_refs}}{logical(1). Should referential footnotes be
re-indexed as if the resulting subset is the entire table. Defaults to
\code{TRUE}.}
}}

\item{value}{Replacement value (list, \code{TableRow}, or \code{TableTree})}

\item{drop}{logical(1). Should the value in the cell be returned if only one
cell is selected by the combination of \code{i} and \code{j}. Defaults to
\code{FALSE}}
}
\value{
a \code{TableTree} (or \code{ElementaryTable}) object, unless a
single cell was selected with \code{drop=TRUE}, in which case the (possibly
multi-valued) fully stripped raw value of the selected cell.
}
\details{
the standard subsetting drops the information about title, subtitle,
main footer, provenance footer, and \code{topleft}. If only a column is selected and
all rows are kept, the \code{topleft} information remains as default. Any referential
footnote is kept whenever the subset table contains the referenced element.
Please note that subsetting always preserve the original order, even if provided
indexes do not preserve it. If sorting is needed, please consider
using \code{sort_at_path()}. Also note that \code{character} indices are treated as paths,
not vectors of names in both \code{[} and \verb{[<-}.
}
\examples{
lyt <- basic_table(title = "Title", 
                   subtitles = c("Sub", "titles"), 
                   prov_footer = "prov footer", 
                   main_footer = "main footer") \%>\%
   split_cols_by("ARM") \%>\%
   split_rows_by("SEX") \%>\%
   analyze(c("AGE"))

tbl <- build_table(lyt, DM)
top_left(tbl) <- "Info"
tbl

# As default header, footer, and topleft information is dropped
tbl[1, ]
tbl[1:2, 2]

# If drop = TRUE, the content values are directly retrieved
tbl[2, 1]
tbl[2, 1, drop = TRUE]

# If all rows are selected, topleft is kept by default
tbl[, 2]
tbl[, 1]

tbl[-2, ]
tbl[, -1]

tbl[2, 1] <- rcell(999)
tbl[2, ] <- list(rrow("FFF", 888, 666, 777))
tbl[6, ] <- list(-111, -222, -333)
tbl

# We can keep some information from the original table if we need
tbl[1, 2, keep_titles = TRUE]
tbl[1, 2, keep_fnotes = TRUE, keep_titles = FALSE]
tbl[1, 2, keep_fnotes = FALSE, keep_titles = TRUE]
tbl[1, 2, keep_fnotes = TRUE]
tbl[1, 2, keep_topleft = TRUE]

# Keeps the referential footnotes when subset contains them
fnotes_at_path(tbl, rowpath = c("SEX", "M", "AGE", "Mean")) <- "important"
tbl[4,1]

# Note that order can not be changed with subsetting
tbl[c(4,3,1), c(3,1)] # It preserves order and wanted selection

}
\seealso{
Regarding sorting: \code{sort_at_path()} and how to understand path
structure: \code{summarize_row_groups()}, and \code{summarize_col_groups()}.
}
\keyword{internal}
\description{
These objects are imported from other packages. Follow the links
below to see their documentation.

\describe{
  \item{base}{\code{\link[base:Extract]{[}}, \code{\link[base:Extract]{[<-}}}
}}

