% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tt_export.R
\name{tt_to_flextable}
\alias{tt_to_flextable}
\alias{theme_docx_default}
\title{Create a \code{FlexTable} from an \code{rtables} table}
\usage{
tt_to_flextable(
  tt,
  theme = theme_docx_default(tt),
  border = officer::fp_border(width = 0.5),
  indent_size = NULL,
  titles_as_header = TRUE,
  paginate = FALSE,
  lpp = NULL,
  cpp = NULL,
  ...,
  colwidths = propose_column_widths(matrix_form(tt, indent_rownames = TRUE)),
  tf_wrap = !is.null(cpp),
  max_width = cpp,
  total_width = 10
)

theme_docx_default(
  tt = NULL,
  font_size = 9,
  font = "arial",
  bold = c("header", "content_rows", "label_rows"),
  bold_manual = NULL,
  border = officer::fp_border(width = 0.5)
)
}
\arguments{
\item{tt}{\code{TableTree} (or related class). A \code{TableTree} object representing a
populated table.}

\item{theme}{function(1). Defaults to \code{theme_docx_default(tt)}. It expects a
a theme function that is designed internally as a function of a \code{flextable} object
and changes its layout and style. If set to \code{NULL}, it will produce a table similar
to \code{rtables} default.}

\item{border}{\code{officer} border object. Defaults to \code{officer::fp_border(width = 0.5)}.}

\item{indent_size}{integer(1). If \code{NULL}, the default indent size of the table (see
\code{\link[=matrix_form]{matrix_form()}} \code{indent_size}) is used. To work with \code{docx}, any size is multiplied
by 5 as default.}

\item{paginate}{logical(1). If you need \code{.docx} export and you use
\code{export_as_docx}, we suggest relying on \code{word} pagination system. Cooperation
between the two mechanisms is not guaranteed. This option splits \code{tt} in different
"pages" as multiple \code{flextables}. Defaults to \code{FALSE}.}

\item{lpp}{numeric. Maximum lines per page including (re)printed header and context rows}

\item{cpp}{numeric(1) or NULL. Width (in characters) of the pages for
horizontal pagination. \code{NA} (the default) indicates \code{cpp} should be inferred from
the page size; \code{NULL} indicates no horizontal pagination should be done
regardless of page size.}

\item{...}{Passed on to methods or tabulation functions.}

\item{colwidths}{numeric vector. Column widths for use with vertical pagination.}

\item{tf_wrap}{logical(1). Should  the texts for  title, subtitle,
and footnotes be wrapped?}

\item{max_width}{integer(1), character(1) or NULL. Width that title
and   footer   (including   footnotes)  materials   should   be
word-wrapped to. If NULL, it is  set to the current print width
of the  session (\code{getOption("width")}). If set to \code{"auto"},
the width of the table (plus any table inset) is used. Ignored
completely if \code{tf_wrap} is \code{FALSE}.}

\item{total_width}{numeric(1). Total width in inches for the resulting
\code{flextable(s)}. Defaults to 10.}

\item{font_size}{numeric(1). Font size, defaults to 12.}

\item{title_as_header}{logical(1). Defaults to \code{TRUE} and makes additional header rows
for \code{\link[=main_title]{main_title()}} string and \code{\link[=subtitles]{subtitles()}} character vector (one per element). If \code{FALSE}
it is still possible to use the same parameter in \code{\link[=export_as_docx]{export_as_docx()}} to add these titles
as a text paragraph above the table.}
}
\value{
a \code{flextable} object.
}
\description{
Principally used for export (\code{\link[=export_as_docx]{export_as_docx()}}), this function produces a \code{flextable}
from an \code{rtables} table. If \code{theme = NULL}, \code{rtables}-like style will be used. Otherwise,
\link{theme_docx_default(tt)} will produce a \code{.docx}-friendly table.
}
\section{Functions}{
\itemize{
\item \code{theme_docx_default()}: theme function for

}}
\examples{
analysisfun <- function(x, ...) {
    in_rows(row1 = 5,
            row2 = c(1, 2),
            .row_footnotes = list(row1 = "row 1 - row footnote"),
            .cell_footnotes = list(row2 = "row 2 - cell footnote"))
}

lyt <- basic_table(title = "Title says Whaaaat", subtitles = "Oh, ok.",
               main_footer = "ha HA! Footer!") \%>\%
split_cols_by("ARM") \%>\%
analyze("AGE", afun = analysisfun)

tbl <-  build_table(lyt, ex_adsl)
# rtables style
tt_to_flextable(tbl,  theme = NULL)
# 
tt_to_flextable(tbl,  theme = theme_docx_default(tt, font_size = 7))

}
\seealso{
\code{\link[=export_as_docx]{export_as_docx()}}
}
